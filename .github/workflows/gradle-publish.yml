# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Deploy to EC2

on:
  push:
    branches: [ main ] # 푸시될 때 실행됨

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      # GitHub Actions VM 환경의 IP를 받아온다.
    - name: Get Public IP
      id: ip
      uses: haythem/public-ip@v1.3

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Build JAR
      run: ./gradlew clean build
      working-directory: ./board/board
      # AWS 인증 관련 옵션을 추가한다.
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: 'ap-northeast-2'

    # GitHub Actions VM 환경의 IP를 인바운드 규칙에 추가한다.
    - name: Add GitHub Actions IP
      run: |
        aws ec2 authorize-security-group-ingress \
            --group-id ${{ secrets.SECURITY_GROUP_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32

    - name: Copy JAR to EC2
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ec2-user
        key: ${{ secrets.EC2_KEY }}
        source: "build/libs/*.jar"
        target: "/home/ec2-user/apps/board/board"  # board 서비스라면

    - name: SSH & Docker restart
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ec2-user
        key: ${{ secrets.EC2_KEY }}
        script: |
          cd /home/ec2-user/apps
         # docker compose up --build -d

    # GitHub Actions VM 환경의 IP를 인바운드 규칙에서 제거한다.
    - name: Remove GitHub Actions IP
      run: |
        aws ec2 revoke-security-group-ingress \
            --group-id ${{ secrets.SECURITY_GROUP_ID }} \
            --protocol tcp \
            --port 22 \
